{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { create } from 'zustand';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport var useAuthStore = create(function (set, get) {\n  return {\n    isAuthenticated: false,\n    isLoading: true,\n    user: null,\n    studentProfile: null,\n    token: null,\n    initializeAuth: function () {\n      var _initializeAuth = _asyncToGenerator(function* () {\n        try {\n          set({\n            isLoading: true\n          });\n          var token = yield AsyncStorage.getItem('auth_token');\n          var userData = yield AsyncStorage.getItem('user_data');\n          var profileData = yield AsyncStorage.getItem('student_profile');\n          if (token && userData && profileData) {\n            var user = JSON.parse(userData);\n            var studentProfile = JSON.parse(profileData);\n            set({\n              isAuthenticated: true,\n              token: token,\n              user: user,\n              studentProfile: studentProfile,\n              isLoading: false\n            });\n          } else {\n            set({\n              isLoading: false\n            });\n          }\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          set({\n            isLoading: false\n          });\n        }\n      });\n      function initializeAuth() {\n        return _initializeAuth.apply(this, arguments);\n      }\n      return initializeAuth;\n    }(),\n    login: function () {\n      var _login = _asyncToGenerator(function* (email, password) {\n        try {\n          set({\n            isLoading: true\n          });\n          var mockUser = {\n            id: '1',\n            email: email,\n            firstName: 'Alex',\n            lastName: 'Johnson',\n            avatar: '',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          };\n          var mockProfile = {\n            id: '1',\n            userId: '1',\n            level: 12,\n            points: 2847,\n            coins: 156,\n            rank: 8,\n            totalStudents: 245,\n            attendancePercentage: 94,\n            averageGrade: 87,\n            streak: 12,\n            achievements: [],\n            preferences: {\n              language: 'en',\n              theme: 'light',\n              notifications: {\n                lessons: true,\n                homework: true,\n                achievements: true,\n                reminders: true\n              },\n              audio: {\n                effects: true,\n                music: true,\n                volume: 80\n              }\n            },\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          };\n          var mockToken = 'mock_jwt_token_123';\n          yield AsyncStorage.setItem('auth_token', mockToken);\n          yield AsyncStorage.setItem('user_data', JSON.stringify(mockUser));\n          yield AsyncStorage.setItem('student_profile', JSON.stringify(mockProfile));\n          set({\n            isAuthenticated: true,\n            user: mockUser,\n            studentProfile: mockProfile,\n            token: mockToken,\n            isLoading: false\n          });\n          return true;\n        } catch (error) {\n          console.error('Login error:', error);\n          set({\n            isLoading: false\n          });\n          return false;\n        }\n      });\n      function login(_x, _x2) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }(),\n    logout: function () {\n      var _logout = _asyncToGenerator(function* () {\n        try {\n          set({\n            isLoading: true\n          });\n          yield AsyncStorage.multiRemove(['auth_token', 'user_data', 'student_profile']);\n          set({\n            isAuthenticated: false,\n            user: null,\n            studentProfile: null,\n            token: null,\n            isLoading: false\n          });\n        } catch (error) {\n          console.error('Logout error:', error);\n          set({\n            isLoading: false\n          });\n        }\n      });\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n      return logout;\n    }(),\n    updateProfile: function () {\n      var _updateProfile = _asyncToGenerator(function* (updates) {\n        try {\n          var currentProfile = get().studentProfile;\n          if (!currentProfile) return;\n          var updatedProfile = _objectSpread(_objectSpread(_objectSpread({}, currentProfile), updates), {}, {\n            updatedAt: new Date().toISOString()\n          });\n          yield AsyncStorage.setItem('student_profile', JSON.stringify(updatedProfile));\n          set({\n            studentProfile: updatedProfile\n          });\n        } catch (error) {\n          console.error('Profile update error:', error);\n        }\n      });\n      function updateProfile(_x3) {\n        return _updateProfile.apply(this, arguments);\n      }\n      return updateProfile;\n    }(),\n    setLoading: function setLoading(loading) {\n      set({\n        isLoading: loading\n      });\n    }\n  };\n});","map":{"version":3,"names":["create","AsyncStorage","useAuthStore","set","get","isAuthenticated","isLoading","user","studentProfile","token","initializeAuth","_initializeAuth","_asyncToGenerator","getItem","userData","profileData","JSON","parse","error","console","apply","arguments","login","_login","email","password","mockUser","id","firstName","lastName","avatar","createdAt","Date","toISOString","updatedAt","mockProfile","userId","level","points","coins","rank","totalStudents","attendancePercentage","averageGrade","streak","achievements","preferences","language","theme","notifications","lessons","homework","reminders","audio","effects","music","volume","mockToken","setItem","stringify","_x","_x2","logout","_logout","multiRemove","updateProfile","_updateProfile","updates","currentProfile","updatedProfile","_objectSpread","_x3","setLoading","loading"],"sources":["/Users/tisenres/Claude Projects/HarrySchoolAdmin/mobile/apps/student/src/store/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { User, StudentProfile } from '../types';\n\ninterface AuthState {\n  // State\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  user: User | null;\n  studentProfile: StudentProfile | null;\n  token: string | null;\n  \n  // Actions\n  initializeAuth: () => Promise<void>;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => Promise<void>;\n  updateProfile: (updates: Partial<StudentProfile>) => Promise<void>;\n  setLoading: (loading: boolean) => void;\n}\n\nexport const useAuthStore = create<AuthState>((set, get) => ({\n  // Initial state\n  isAuthenticated: false,\n  isLoading: true,\n  user: null,\n  studentProfile: null,\n  token: null,\n\n  // Initialize authentication state from storage\n  initializeAuth: async () => {\n    try {\n      set({ isLoading: true });\n      \n      const token = await AsyncStorage.getItem('auth_token');\n      const userData = await AsyncStorage.getItem('user_data');\n      const profileData = await AsyncStorage.getItem('student_profile');\n      \n      if (token && userData && profileData) {\n        const user = JSON.parse(userData);\n        const studentProfile = JSON.parse(profileData);\n        \n        set({\n          isAuthenticated: true,\n          token,\n          user,\n          studentProfile,\n          isLoading: false,\n        });\n      } else {\n        set({ isLoading: false });\n      }\n    } catch (error) {\n      console.error('Auth initialization error:', error);\n      set({ isLoading: false });\n    }\n  },\n\n  // Login function\n  login: async (email: string, password: string): Promise<boolean> => {\n    try {\n      set({ isLoading: true });\n      \n      // TODO: Replace with actual API call\n      // For now, simulate login with mock data\n      const mockUser: User = {\n        id: '1',\n        email: email,\n        firstName: 'Alex',\n        lastName: 'Johnson',\n        avatar: '',\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n\n      const mockProfile: StudentProfile = {\n        id: '1',\n        userId: '1',\n        level: 12,\n        points: 2847,\n        coins: 156,\n        rank: 8,\n        totalStudents: 245,\n        attendancePercentage: 94,\n        averageGrade: 87,\n        streak: 12,\n        achievements: [],\n        preferences: {\n          language: 'en',\n          theme: 'light',\n          notifications: {\n            lessons: true,\n            homework: true,\n            achievements: true,\n            reminders: true,\n          },\n          audio: {\n            effects: true,\n            music: true,\n            volume: 80,\n          },\n        },\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n\n      const mockToken = 'mock_jwt_token_123';\n\n      // Store in AsyncStorage\n      await AsyncStorage.setItem('auth_token', mockToken);\n      await AsyncStorage.setItem('user_data', JSON.stringify(mockUser));\n      await AsyncStorage.setItem('student_profile', JSON.stringify(mockProfile));\n\n      set({\n        isAuthenticated: true,\n        user: mockUser,\n        studentProfile: mockProfile,\n        token: mockToken,\n        isLoading: false,\n      });\n\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      set({ isLoading: false });\n      return false;\n    }\n  },\n\n  // Logout function\n  logout: async () => {\n    try {\n      set({ isLoading: true });\n      \n      // Clear AsyncStorage\n      await AsyncStorage.multiRemove([\n        'auth_token',\n        'user_data',\n        'student_profile',\n      ]);\n\n      set({\n        isAuthenticated: false,\n        user: null,\n        studentProfile: null,\n        token: null,\n        isLoading: false,\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n      set({ isLoading: false });\n    }\n  },\n\n  // Update profile function\n  updateProfile: async (updates: Partial<StudentProfile>) => {\n    try {\n      const currentProfile = get().studentProfile;\n      if (!currentProfile) return;\n\n      const updatedProfile = {\n        ...currentProfile,\n        ...updates,\n        updatedAt: new Date().toISOString(),\n      };\n\n      await AsyncStorage.setItem('student_profile', JSON.stringify(updatedProfile));\n\n      set({ studentProfile: updatedProfile });\n    } catch (error) {\n      console.error('Profile update error:', error);\n    }\n  },\n\n  // Set loading state\n  setLoading: (loading: boolean) => {\n    set({ isLoading: loading });\n  },\n}));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}