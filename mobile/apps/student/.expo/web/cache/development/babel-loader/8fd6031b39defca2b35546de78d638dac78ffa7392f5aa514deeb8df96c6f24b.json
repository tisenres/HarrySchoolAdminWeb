{"ast":null,"code":"import { ensureNativeModulesAreInstalled } from \"./ensureNativeModulesAreInstalled\";\nexport function registerWebModule(moduleImplementation, moduleName) {\n  var _moduleName, _globalThis$expo;\n  ensureNativeModulesAreInstalled();\n  moduleName = (_moduleName = moduleName) != null ? _moduleName : moduleImplementation.name;\n  if (!moduleName) {\n    throw new Error('Web module implementation is missing a name - it is either not a class or has been minified. Pass the name as a second argument to the `registerWebModule` function.');\n  }\n  if (!(globalThis != null && (_globalThis$expo = globalThis.expo) != null && _globalThis$expo.modules)) {\n    globalThis.expo.modules = {};\n  }\n  if (globalThis.expo.modules[moduleName]) {\n    return globalThis.expo.modules[moduleName];\n  }\n  globalThis.expo.modules[moduleName] = new moduleImplementation();\n  return globalThis.expo.modules[moduleName];\n}","map":{"version":3,"names":["ensureNativeModulesAreInstalled","registerWebModule","moduleImplementation","moduleName","_moduleName","_globalThis$expo","name","Error","globalThis","expo","modules"],"sources":["/Users/tisenres/Claude Projects/HarrySchoolAdmin/mobile/node_modules/expo-modules-core/src/registerWebModule.ts"],"sourcesContent":["import { ensureNativeModulesAreInstalled } from './ensureNativeModulesAreInstalled';\nimport type { NativeModule } from './ts-declarations/NativeModule';\n\n/**\n * Registers a web module.\n * @param moduleImplementation A class that extends `NativeModule`. The class is registered under `globalThis.expo.modules[className]`.\n * @param moduleName â€“ a name to register the module under `globalThis.expo.modules[className]`.\n * @returns A singleton instance of the class passed into arguments.\n */\n\nexport function registerWebModule<\n  EventsMap extends Record<never, never>,\n  ModuleType extends typeof NativeModule<EventsMap>,\n>(moduleImplementation: ModuleType, moduleName: string): ModuleType {\n  ensureNativeModulesAreInstalled();\n\n  moduleName = moduleName ?? moduleImplementation.name;\n  if (!moduleName) {\n    throw new Error(\n      'Web module implementation is missing a name - it is either not a class or has been minified. Pass the name as a second argument to the `registerWebModule` function.'\n    );\n  }\n  if (!globalThis?.expo?.modules) {\n    globalThis.expo.modules = {};\n  }\n  if (globalThis.expo.modules[moduleName]) {\n    return globalThis.expo.modules[moduleName];\n  }\n  globalThis.expo.modules[moduleName] = new moduleImplementation();\n  return globalThis.expo.modules[moduleName];\n}\n"],"mappings":"AAAA,SAASA,+BAA+B;AAUxC,OAAO,SAASC,iBAAiBA,CAG/BC,oBAAgC,EAAEC,UAAkB,EAAc;EAAA,IAAAC,WAAA,EAAAC,gBAAA;EAClEL,+BAA+B,CAAC,CAAC;EAEjCG,UAAU,IAAAC,WAAA,GAAGD,UAAU,YAAAC,WAAA,GAAIF,oBAAoB,CAACI,IAAI;EACpD,IAAI,CAACH,UAAU,EAAE;IACf,MAAM,IAAII,KAAK,CACb,sKACF,CAAC;EACH;EACA,IAAI,EAACC,UAAU,aAAAH,gBAAA,GAAVG,UAAU,CAAEC,IAAI,aAAhBJ,gBAAA,CAAkBK,OAAO,GAAE;IAC9BF,UAAU,CAACC,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC;EAC9B;EACA,IAAIF,UAAU,CAACC,IAAI,CAACC,OAAO,CAACP,UAAU,CAAC,EAAE;IACvC,OAAOK,UAAU,CAACC,IAAI,CAACC,OAAO,CAACP,UAAU,CAAC;EAC5C;EACAK,UAAU,CAACC,IAAI,CAACC,OAAO,CAACP,UAAU,CAAC,GAAG,IAAID,oBAAoB,CAAC,CAAC;EAChE,OAAOM,UAAU,CAACC,IAAI,CAACC,OAAO,CAACP,UAAU,CAAC;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}