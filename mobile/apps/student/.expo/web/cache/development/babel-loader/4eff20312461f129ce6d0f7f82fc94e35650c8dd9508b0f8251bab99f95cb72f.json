{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { EventEmitter, NativeModule, SharedObject, SharedRef } from \"./CoreModule\";\nimport uuid from \"../uuid\";\nexport * from \"../ts-declarations/global\";\nexport function registerWebGlobals() {\n  var _globalThis$ExpoDomWe, _globalThis$ExpoDomWe2;\n  if (globalThis.expo) return;\n  globalThis.expo = {\n    EventEmitter: EventEmitter,\n    NativeModule: NativeModule,\n    SharedObject: SharedObject,\n    SharedRef: SharedRef,\n    modules: (_globalThis$ExpoDomWe = (_globalThis$ExpoDomWe2 = globalThis.ExpoDomWebView) == null ? void 0 : _globalThis$ExpoDomWe2.expoModulesProxy) != null ? _globalThis$ExpoDomWe : {},\n    uuidv4: uuid.v4,\n    uuidv5: uuid.v5,\n    getViewConfig: function getViewConfig() {\n      throw new Error('Method not implemented.');\n    },\n    reloadAppAsync: function () {\n      var _reloadAppAsync = _asyncToGenerator(function* () {\n        window.location.reload();\n      });\n      function reloadAppAsync() {\n        return _reloadAppAsync.apply(this, arguments);\n      }\n      return reloadAppAsync;\n    }()\n  };\n}\nregisterWebGlobals();","map":{"version":3,"names":["EventEmitter","NativeModule","SharedObject","SharedRef","uuid","registerWebGlobals","_globalThis$ExpoDomWe","_globalThis$ExpoDomWe2","globalThis","expo","modules","ExpoDomWebView","expoModulesProxy","uuidv4","v4","uuidv5","v5","getViewConfig","Error","reloadAppAsync","_reloadAppAsync","_asyncToGenerator","window","location","reload","apply","arguments"],"sources":["/Users/tisenres/Claude Projects/HarrySchoolAdmin/mobile/node_modules/expo-modules-core/src/web/index.web.ts"],"sourcesContent":["import { EventEmitter, NativeModule, SharedObject, SharedRef } from './CoreModule';\nimport uuid from '../uuid';\n\n// jest-expo imports to this file directly without going through the global types\n// Exporting the types to let jest-expo to know the globalThis types\nexport * from '../ts-declarations/global';\n\nexport function registerWebGlobals() {\n  if (globalThis.expo) return;\n  globalThis.expo = {\n    EventEmitter,\n    NativeModule,\n    SharedObject,\n    SharedRef,\n    modules: globalThis.ExpoDomWebView?.expoModulesProxy ?? {},\n    uuidv4: uuid.v4,\n    uuidv5: uuid.v5,\n    getViewConfig: () => {\n      throw new Error('Method not implemented.');\n    },\n    reloadAppAsync: async () => {\n      window.location.reload();\n    },\n  };\n}\n\nregisterWebGlobals();\n"],"mappings":";AAAA,SAASA,YAAY,EAAEC,YAAY,EAAEC,YAAY,EAAEC,SAAS;AAC5D,OAAOC,IAAI;AAIX;AAEA,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACnC,IAAIC,UAAU,CAACC,IAAI,EAAE;EACrBD,UAAU,CAACC,IAAI,GAAG;IAChBT,YAAY,EAAZA,YAAY;IACZC,YAAY,EAAZA,YAAY;IACZC,YAAY,EAAZA,YAAY;IACZC,SAAS,EAATA,SAAS;IACTO,OAAO,GAAAJ,qBAAA,IAAAC,sBAAA,GAAEC,UAAU,CAACG,cAAc,qBAAzBJ,sBAAA,CAA2BK,gBAAgB,YAAAN,qBAAA,GAAI,CAAC,CAAC;IAC1DO,MAAM,EAAET,IAAI,CAACU,EAAE;IACfC,MAAM,EAAEX,IAAI,CAACY,EAAE;IACfC,aAAa,EAAE,SAAfA,aAAaA,CAAA,EAAQ;MACnB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C,CAAC;IACDC,cAAc;MAAA,IAAAC,eAAA,GAAAC,iBAAA,CAAE,aAAY;QAC1BC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC1B,CAAC;MAAA,SAFDL,cAAcA,CAAA;QAAA,OAAAC,eAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAdP,cAAc;IAAA;EAGhB,CAAC;AACH;AAEAd,kBAAkB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}