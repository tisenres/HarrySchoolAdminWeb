{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport VocabularyHomeScreen from \"../screens/vocabulary/VocabularyHomeScreen\";\nimport FlashcardsScreen from \"../screens/vocabulary/FlashcardsScreen\";\nimport TranslatorScreen from \"../screens/vocabulary/TranslatorScreen\";\nimport WordDetailScreen from \"../screens/vocabulary/WordDetailScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function VocabularyNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"VocabularyHome\",\n      component: VocabularyHomeScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Flashcards\",\n      component: FlashcardsScreen,\n      options: {\n        headerShown: true,\n        title: 'Flashcards'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Translator\",\n      component: TranslatorScreen,\n      options: {\n        headerShown: true,\n        title: 'Translator'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"WordDetail\",\n      component: WordDetailScreen,\n      options: {\n        headerShown: true,\n        title: 'Word Details'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","createStackNavigator","VocabularyHomeScreen","FlashcardsScreen","TranslatorScreen","WordDetailScreen","jsx","_jsx","jsxs","_jsxs","Stack","VocabularyNavigator","Navigator","screenOptions","headerShown","children","Screen","name","component","options","title"],"sources":["/Users/tisenres/Claude Projects/HarrySchoolAdmin/mobile/apps/student/src/navigation/VocabularyNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport { VocabularyStackParamList } from '../types';\nimport VocabularyHomeScreen from '../screens/vocabulary/VocabularyHomeScreen';\nimport FlashcardsScreen from '../screens/vocabulary/FlashcardsScreen';\nimport TranslatorScreen from '../screens/vocabulary/TranslatorScreen';\nimport WordDetailScreen from '../screens/vocabulary/WordDetailScreen';\n\nconst Stack = createStackNavigator<VocabularyStackParamList>();\n\nexport default function VocabularyNavigator() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <Stack.Screen \n        name=\"VocabularyHome\" \n        component={VocabularyHomeScreen} \n      />\n      <Stack.Screen \n        name=\"Flashcards\" \n        component={FlashcardsScreen}\n        options={{\n          headerShown: true,\n          title: 'Flashcards',\n        }}\n      />\n      <Stack.Screen \n        name=\"Translator\" \n        component={TranslatorScreen}\n        options={{\n          headerShown: true,\n          title: 'Translator',\n        }}\n      />\n      <Stack.Screen \n        name=\"WordDetail\" \n        component={WordDetailScreen}\n        options={{\n          headerShown: true,\n          title: 'Word Details',\n        }}\n      />\n    </Stack.Navigator>\n  );\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,yBAAyB;AAG9D,OAAOC,oBAAoB;AAC3B,OAAOC,gBAAgB;AACvB,OAAOC,gBAAgB;AACvB,OAAOC,gBAAgB;AAA+C,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEtE,IAAMC,KAAK,GAAGT,oBAAoB,CAA2B,CAAC;AAE9D,eAAe,SAASU,mBAAmBA,CAAA,EAAG;EAC5C,OACEF,KAAA,CAACC,KAAK,CAACE,SAAS;IACdC,aAAa,EAAE;MACbC,WAAW,EAAE;IACf,CAAE;IAAAC,QAAA,GAEFR,IAAA,CAACG,KAAK,CAACM,MAAM;MACXC,IAAI,EAAC,gBAAgB;MACrBC,SAAS,EAAEhB;IAAqB,CACjC,CAAC,EACFK,IAAA,CAACG,KAAK,CAACM,MAAM;MACXC,IAAI,EAAC,YAAY;MACjBC,SAAS,EAAEf,gBAAiB;MAC5BgB,OAAO,EAAE;QACPL,WAAW,EAAE,IAAI;QACjBM,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACFb,IAAA,CAACG,KAAK,CAACM,MAAM;MACXC,IAAI,EAAC,YAAY;MACjBC,SAAS,EAAEd,gBAAiB;MAC5Be,OAAO,EAAE;QACPL,WAAW,EAAE,IAAI;QACjBM,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACFb,IAAA,CAACG,KAAK,CAACM,MAAM;MACXC,IAAI,EAAC,YAAY;MACjBC,SAAS,EAAEb,gBAAiB;MAC5Bc,OAAO,EAAE;QACPL,WAAW,EAAE,IAAI;QACjBM,KAAK,EAAE;MACT;IAAE,CACH,CAAC;EAAA,CACa,CAAC;AAEtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}