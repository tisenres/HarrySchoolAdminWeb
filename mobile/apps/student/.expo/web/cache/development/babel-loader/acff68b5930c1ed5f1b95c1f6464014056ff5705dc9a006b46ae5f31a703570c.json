{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons } from '@expo/vector-icons';\nimport { COLORS, TYPOGRAPHY, SPACING, BORDER_RADIUS, SHADOWS } from \"../../constants/design\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar mockAchievements = [{\n  id: '1',\n  title: 'First Steps',\n  description: 'Complete your first lesson',\n  icon: 'footsteps',\n  rarity: 'common',\n  points: 50,\n  coins: 10,\n  condition: {\n    type: 'lessons_completed',\n    target: 1,\n    current: 1\n  },\n  isUnlocked: true,\n  unlockedAt: '2024-01-15T10:00:00Z',\n  progress: 100,\n  createdAt: '2024-01-01T00:00:00Z'\n}, {\n  id: '2',\n  title: 'Streak Master',\n  description: 'Maintain a 7-day learning streak',\n  icon: 'flame',\n  rarity: 'rare',\n  points: 200,\n  coins: 50,\n  condition: {\n    type: 'streak_days',\n    target: 7,\n    current: 7\n  },\n  isUnlocked: true,\n  unlockedAt: '2024-01-20T15:30:00Z',\n  progress: 100,\n  createdAt: '2024-01-01T00:00:00Z'\n}, {\n  id: '3',\n  title: 'Quiz Champion',\n  description: 'Score 100% on 5 quizzes in a row',\n  icon: 'trophy',\n  rarity: 'epic',\n  points: 500,\n  coins: 100,\n  condition: {\n    type: 'quiz_perfect',\n    target: 5,\n    current: 3\n  },\n  isUnlocked: false,\n  progress: 60,\n  createdAt: '2024-01-01T00:00:00Z'\n}, {\n  id: '4',\n  title: 'Legend',\n  description: 'Reach the top 10 in global rankings',\n  icon: 'crown',\n  rarity: 'legendary',\n  points: 1000,\n  coins: 250,\n  condition: {\n    type: 'points_earned',\n    target: 10000,\n    current: 2847\n  },\n  isUnlocked: false,\n  progress: 28,\n  createdAt: '2024-01-01T00:00:00Z'\n}];\nvar getRarityColor = function getRarityColor(rarity) {\n  switch (rarity) {\n    case 'common':\n      return [COLORS.gray400, COLORS.gray500];\n    case 'rare':\n      return [COLORS.info, COLORS.secondary];\n    case 'epic':\n      return [COLORS.purple, COLORS.purpleLight];\n    case 'legendary':\n      return [COLORS.gold, COLORS.goldLight];\n  }\n};\nvar getRarityGlow = function getRarityGlow(rarity) {\n  switch (rarity) {\n    case 'common':\n      return COLORS.gray200;\n    case 'rare':\n      return `${COLORS.info}30`;\n    case 'epic':\n      return `${COLORS.purple}30`;\n    case 'legendary':\n      return `${COLORS.gold}30`;\n  }\n};\nvar AchievementCard = function AchievementCard(_ref) {\n  var achievement = _ref.achievement,\n    onPress = _ref.onPress;\n  var rarityColors = getRarityColor(achievement.rarity);\n  var glowColor = getRarityGlow(achievement.rarity);\n  return _jsxs(TouchableOpacity, {\n    style: [styles.achievementCard, achievement.isUnlocked && {\n      shadowColor: glowColor,\n      elevation: 8\n    }],\n    onPress: onPress,\n    activeOpacity: 0.8,\n    children: [_jsx(LinearGradient, {\n      colors: achievement.isUnlocked ? rarityColors : [COLORS.gray200, COLORS.gray300],\n      style: styles.achievementIcon,\n      children: _jsx(Ionicons, {\n        name: achievement.icon,\n        size: 32,\n        color: achievement.isUnlocked ? COLORS.white : COLORS.gray400\n      })\n    }), _jsxs(View, {\n      style: styles.achievementContent,\n      children: [_jsxs(View, {\n        style: styles.achievementHeader,\n        children: [_jsx(Text, {\n          style: [styles.achievementTitle, !achievement.isUnlocked && styles.lockedTitle],\n          children: achievement.title\n        }), _jsx(Text, {\n          style: [styles.rarityBadge, {\n            color: rarityColors[0]\n          }],\n          children: achievement.rarity.toUpperCase()\n        })]\n      }), _jsx(Text, {\n        style: [styles.achievementDescription, !achievement.isUnlocked && styles.lockedDescription],\n        children: achievement.description\n      }), _jsxs(View, {\n        style: styles.rewardContainer,\n        children: [_jsxs(View, {\n          style: styles.reward,\n          children: [_jsx(Ionicons, {\n            name: \"star\",\n            size: 14,\n            color: COLORS.gold\n          }), _jsxs(Text, {\n            style: styles.rewardText,\n            children: [achievement.points, \" pts\"]\n          })]\n        }), _jsxs(View, {\n          style: styles.reward,\n          children: [_jsx(Ionicons, {\n            name: \"diamond\",\n            size: 14,\n            color: COLORS.gold\n          }), _jsx(Text, {\n            style: styles.rewardText,\n            children: achievement.coins\n          })]\n        })]\n      }), !achievement.isUnlocked && _jsxs(View, {\n        style: styles.progressContainer,\n        children: [_jsx(View, {\n          style: styles.progressBar,\n          children: _jsx(View, {\n            style: [styles.progressFill, {\n              width: `${achievement.progress}%`,\n              backgroundColor: rarityColors[0]\n            }]\n          })\n        }), _jsxs(Text, {\n          style: styles.progressText,\n          children: [achievement.condition.current, \" / \", achievement.condition.target]\n        })]\n      }), achievement.isUnlocked && achievement.unlockedAt && _jsxs(View, {\n        style: styles.unlockedContainer,\n        children: [_jsx(Ionicons, {\n          name: \"checkmark-circle\",\n          size: 16,\n          color: COLORS.success\n        }), _jsxs(Text, {\n          style: styles.unlockedText,\n          children: [\"Unlocked \", new Date(achievement.unlockedAt).toLocaleDateString()]\n        })]\n      })]\n    }), achievement.isUnlocked && _jsx(View, {\n      style: [styles.unlockedBadge, {\n        backgroundColor: rarityColors[0]\n      }],\n      children: _jsx(Ionicons, {\n        name: \"checkmark\",\n        size: 16,\n        color: COLORS.white\n      })\n    })]\n  });\n};\nexport default function AchievementsScreen() {\n  var unlockedCount = mockAchievements.filter(function (a) {\n    return a.isUnlocked;\n  }).length;\n  var totalPoints = mockAchievements.filter(function (a) {\n    return a.isUnlocked;\n  }).reduce(function (sum, a) {\n    return sum + a.points;\n  }, 0);\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      style: styles.scrollView,\n      contentContainerStyle: styles.scrollContent,\n      showsVerticalScrollIndicator: false,\n      children: [_jsx(View, {\n        style: styles.statsContainer,\n        children: _jsxs(LinearGradient, {\n          colors: [COLORS.primary, COLORS.primaryLight],\n          style: styles.statsCard,\n          children: [_jsx(Text, {\n            style: styles.statsTitle,\n            children: \"Achievement Progress\"\n          }), _jsxs(View, {\n            style: styles.statsRow,\n            children: [_jsxs(View, {\n              style: styles.stat,\n              children: [_jsx(Text, {\n                style: styles.statValue,\n                children: unlockedCount\n              }), _jsx(Text, {\n                style: styles.statLabel,\n                children: \"Unlocked\"\n              })]\n            }), _jsx(View, {\n              style: styles.statDivider\n            }), _jsxs(View, {\n              style: styles.stat,\n              children: [_jsx(Text, {\n                style: styles.statValue,\n                children: mockAchievements.length\n              }), _jsx(Text, {\n                style: styles.statLabel,\n                children: \"Total\"\n              })]\n            }), _jsx(View, {\n              style: styles.statDivider\n            }), _jsxs(View, {\n              style: styles.stat,\n              children: [_jsx(Text, {\n                style: styles.statValue,\n                children: totalPoints\n              }), _jsx(Text, {\n                style: styles.statLabel,\n                children: \"Points\"\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.overallProgress,\n            children: [_jsx(Text, {\n              style: styles.progressLabel,\n              children: \"Overall Progress\"\n            }), _jsx(View, {\n              style: styles.overallProgressBar,\n              children: _jsx(View, {\n                style: [styles.overallProgressFill, {\n                  width: `${unlockedCount / mockAchievements.length * 100}%`\n                }]\n              })\n            }), _jsxs(Text, {\n              style: styles.progressPercentage,\n              children: [Math.round(unlockedCount / mockAchievements.length * 100), \"%\"]\n            })]\n          })]\n        })\n      }), _jsxs(View, {\n        style: styles.achievementsContainer,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"All Achievements\"\n        }), mockAchievements.map(function (achievement) {\n          return _jsx(AchievementCard, {\n            achievement: achievement,\n            onPress: function onPress() {}\n          }, achievement.id);\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.background\n  },\n  scrollView: {\n    flex: 1\n  },\n  scrollContent: {\n    paddingBottom: SPACING['4xl']\n  },\n  statsContainer: {\n    padding: SPACING.base\n  },\n  statsCard: _objectSpread({\n    padding: SPACING.xl,\n    borderRadius: BORDER_RADIUS.xl\n  }, SHADOWS.lg),\n  statsTitle: {\n    fontSize: TYPOGRAPHY.xl,\n    fontWeight: TYPOGRAPHY.bold,\n    color: COLORS.white,\n    textAlign: 'center',\n    marginBottom: SPACING.lg\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: SPACING.lg\n  },\n  stat: {\n    alignItems: 'center'\n  },\n  statValue: {\n    fontSize: TYPOGRAPHY['2xl'],\n    fontWeight: TYPOGRAPHY.bold,\n    color: COLORS.white\n  },\n  statLabel: {\n    fontSize: TYPOGRAPHY.sm,\n    color: COLORS.white,\n    opacity: 0.9,\n    marginTop: SPACING.xs\n  },\n  statDivider: {\n    width: 1,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)'\n  },\n  overallProgress: {\n    marginTop: SPACING.base\n  },\n  progressLabel: {\n    fontSize: TYPOGRAPHY.base,\n    color: COLORS.white,\n    marginBottom: SPACING.sm,\n    textAlign: 'center'\n  },\n  overallProgressBar: {\n    height: 8,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n    borderRadius: BORDER_RADIUS.full,\n    overflow: 'hidden',\n    marginBottom: SPACING.sm\n  },\n  overallProgressFill: {\n    height: '100%',\n    backgroundColor: COLORS.white,\n    borderRadius: BORDER_RADIUS.full\n  },\n  progressPercentage: {\n    fontSize: TYPOGRAPHY.sm,\n    color: COLORS.white,\n    textAlign: 'center',\n    opacity: 0.9\n  },\n  achievementsContainer: {\n    padding: SPACING.base\n  },\n  sectionTitle: {\n    fontSize: TYPOGRAPHY.xl,\n    fontWeight: TYPOGRAPHY.bold,\n    color: COLORS.text,\n    marginBottom: SPACING.base,\n    paddingHorizontal: SPACING.sm\n  },\n  achievementCard: _objectSpread({\n    flexDirection: 'row',\n    backgroundColor: COLORS.white,\n    padding: SPACING.base,\n    borderRadius: BORDER_RADIUS.lg,\n    marginBottom: SPACING.base,\n    position: 'relative'\n  }, SHADOWS.sm),\n  achievementIcon: {\n    width: 64,\n    height: 64,\n    borderRadius: 32,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: SPACING.base\n  },\n  achievementContent: {\n    flex: 1\n  },\n  achievementHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: SPACING.xs\n  },\n  achievementTitle: {\n    fontSize: TYPOGRAPHY.base,\n    fontWeight: TYPOGRAPHY.semiBold,\n    color: COLORS.text,\n    flex: 1\n  },\n  lockedTitle: {\n    color: COLORS.gray500\n  },\n  rarityBadge: {\n    fontSize: TYPOGRAPHY.xs,\n    fontWeight: TYPOGRAPHY.bold,\n    marginLeft: SPACING.sm\n  },\n  achievementDescription: {\n    fontSize: TYPOGRAPHY.sm,\n    color: COLORS.textSecondary,\n    marginBottom: SPACING.sm,\n    lineHeight: 20\n  },\n  lockedDescription: {\n    color: COLORS.gray400\n  },\n  rewardContainer: {\n    flexDirection: 'row',\n    marginBottom: SPACING.sm\n  },\n  reward: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: SPACING.base\n  },\n  rewardText: {\n    fontSize: TYPOGRAPHY.xs,\n    color: COLORS.textSecondary,\n    marginLeft: SPACING.xs,\n    fontWeight: TYPOGRAPHY.medium\n  },\n  progressContainer: {\n    marginBottom: SPACING.sm\n  },\n  progressBar: {\n    height: 6,\n    backgroundColor: COLORS.gray200,\n    borderRadius: BORDER_RADIUS.full,\n    overflow: 'hidden',\n    marginBottom: SPACING.xs\n  },\n  progressFill: {\n    height: '100%',\n    borderRadius: BORDER_RADIUS.full\n  },\n  progressText: {\n    fontSize: TYPOGRAPHY.xs,\n    color: COLORS.textTertiary\n  },\n  unlockedContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  unlockedText: {\n    fontSize: TYPOGRAPHY.xs,\n    color: COLORS.success,\n    marginLeft: SPACING.xs,\n    fontWeight: TYPOGRAPHY.medium\n  },\n  unlockedBadge: {\n    position: 'absolute',\n    top: SPACING.sm,\n    right: SPACING.sm,\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","SafeAreaView","ScrollView","TouchableOpacity","LinearGradient","Ionicons","COLORS","TYPOGRAPHY","SPACING","BORDER_RADIUS","SHADOWS","jsx","_jsx","jsxs","_jsxs","mockAchievements","id","title","description","icon","rarity","points","coins","condition","type","target","current","isUnlocked","unlockedAt","progress","createdAt","getRarityColor","gray400","gray500","info","secondary","purple","purpleLight","gold","goldLight","getRarityGlow","gray200","AchievementCard","_ref","achievement","onPress","rarityColors","glowColor","style","styles","achievementCard","shadowColor","elevation","activeOpacity","children","colors","gray300","achievementIcon","name","size","color","white","achievementContent","achievementHeader","achievementTitle","lockedTitle","rarityBadge","toUpperCase","achievementDescription","lockedDescription","rewardContainer","reward","rewardText","progressContainer","progressBar","progressFill","width","backgroundColor","progressText","unlockedContainer","success","unlockedText","Date","toLocaleDateString","unlockedBadge","AchievementsScreen","unlockedCount","filter","a","length","totalPoints","reduce","sum","container","scrollView","contentContainerStyle","scrollContent","showsVerticalScrollIndicator","statsContainer","primary","primaryLight","statsCard","statsTitle","statsRow","stat","statValue","statLabel","statDivider","overallProgress","progressLabel","overallProgressBar","overallProgressFill","progressPercentage","Math","round","achievementsContainer","sectionTitle","map","create","flex","background","paddingBottom","padding","base","_objectSpread","xl","borderRadius","lg","fontSize","fontWeight","bold","textAlign","marginBottom","flexDirection","justifyContent","alignItems","sm","opacity","marginTop","xs","height","full","overflow","text","paddingHorizontal","position","marginRight","semiBold","marginLeft","textSecondary","lineHeight","medium","textTertiary","top","right"],"sources":["/Users/tisenres/Claude Projects/HarrySchoolAdmin/mobile/apps/student/src/screens/home/AchievementsScreen.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  TouchableOpacity,\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport { Achievement, AchievementRarity } from '../../types';\nimport { COLORS, TYPOGRAPHY, SPACING, BORDER_RADIUS, SHADOWS } from '../../constants/design';\n\nconst mockAchievements: Achievement[] = [\n  {\n    id: '1',\n    title: 'First Steps',\n    description: 'Complete your first lesson',\n    icon: 'footsteps',\n    rarity: 'common',\n    points: 50,\n    coins: 10,\n    condition: { type: 'lessons_completed', target: 1, current: 1 },\n    isUnlocked: true,\n    unlockedAt: '2024-01-15T10:00:00Z',\n    progress: 100,\n    createdAt: '2024-01-01T00:00:00Z',\n  },\n  {\n    id: '2',\n    title: 'Streak Master',\n    description: 'Maintain a 7-day learning streak',\n    icon: 'flame',\n    rarity: 'rare',\n    points: 200,\n    coins: 50,\n    condition: { type: 'streak_days', target: 7, current: 7 },\n    isUnlocked: true,\n    unlockedAt: '2024-01-20T15:30:00Z',\n    progress: 100,\n    createdAt: '2024-01-01T00:00:00Z',\n  },\n  {\n    id: '3',\n    title: 'Quiz Champion',\n    description: 'Score 100% on 5 quizzes in a row',\n    icon: 'trophy',\n    rarity: 'epic',\n    points: 500,\n    coins: 100,\n    condition: { type: 'quiz_perfect', target: 5, current: 3 },\n    isUnlocked: false,\n    progress: 60,\n    createdAt: '2024-01-01T00:00:00Z',\n  },\n  {\n    id: '4',\n    title: 'Legend',\n    description: 'Reach the top 10 in global rankings',\n    icon: 'crown',\n    rarity: 'legendary',\n    points: 1000,\n    coins: 250,\n    condition: { type: 'points_earned', target: 10000, current: 2847 },\n    isUnlocked: false,\n    progress: 28,\n    createdAt: '2024-01-01T00:00:00Z',\n  },\n];\n\nconst getRarityColor = (rarity: AchievementRarity) => {\n  switch (rarity) {\n    case 'common': return [COLORS.gray400, COLORS.gray500];\n    case 'rare': return [COLORS.info, COLORS.secondary];\n    case 'epic': return [COLORS.purple, COLORS.purpleLight];\n    case 'legendary': return [COLORS.gold, COLORS.goldLight];\n  }\n};\n\nconst getRarityGlow = (rarity: AchievementRarity) => {\n  switch (rarity) {\n    case 'common': return COLORS.gray200;\n    case 'rare': return `${COLORS.info}30`;\n    case 'epic': return `${COLORS.purple}30`;\n    case 'legendary': return `${COLORS.gold}30`;\n  }\n};\n\ninterface AchievementCardProps {\n  achievement: Achievement;\n  onPress: () => void;\n}\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement, onPress }) => {\n  const rarityColors = getRarityColor(achievement.rarity);\n  const glowColor = getRarityGlow(achievement.rarity);\n  \n  return (\n    <TouchableOpacity \n      style={[\n        styles.achievementCard,\n        achievement.isUnlocked && { shadowColor: glowColor, elevation: 8 }\n      ]}\n      onPress={onPress}\n      activeOpacity={0.8}\n    >\n      <LinearGradient\n        colors={achievement.isUnlocked ? rarityColors : [COLORS.gray200, COLORS.gray300]}\n        style={styles.achievementIcon}\n      >\n        <Ionicons \n          name={achievement.icon as any} \n          size={32} \n          color={achievement.isUnlocked ? COLORS.white : COLORS.gray400} \n        />\n      </LinearGradient>\n      \n      <View style={styles.achievementContent}>\n        <View style={styles.achievementHeader}>\n          <Text style={[\n            styles.achievementTitle,\n            !achievement.isUnlocked && styles.lockedTitle\n          ]}>\n            {achievement.title}\n          </Text>\n          <Text style={[styles.rarityBadge, { color: rarityColors[0] }]}>\n            {achievement.rarity.toUpperCase()}\n          </Text>\n        </View>\n        \n        <Text style={[\n          styles.achievementDescription,\n          !achievement.isUnlocked && styles.lockedDescription\n        ]}>\n          {achievement.description}\n        </Text>\n        \n        <View style={styles.rewardContainer}>\n          <View style={styles.reward}>\n            <Ionicons name=\"star\" size={14} color={COLORS.gold} />\n            <Text style={styles.rewardText}>{achievement.points} pts</Text>\n          </View>\n          <View style={styles.reward}>\n            <Ionicons name=\"diamond\" size={14} color={COLORS.gold} />\n            <Text style={styles.rewardText}>{achievement.coins}</Text>\n          </View>\n        </View>\n        \n        {!achievement.isUnlocked && (\n          <View style={styles.progressContainer}>\n            <View style={styles.progressBar}>\n              <View \n                style={[\n                  styles.progressFill,\n                  { width: `${achievement.progress}%`, backgroundColor: rarityColors[0] }\n                ]}\n              />\n            </View>\n            <Text style={styles.progressText}>\n              {achievement.condition.current} / {achievement.condition.target}\n            </Text>\n          </View>\n        )}\n        \n        {achievement.isUnlocked && achievement.unlockedAt && (\n          <View style={styles.unlockedContainer}>\n            <Ionicons name=\"checkmark-circle\" size={16} color={COLORS.success} />\n            <Text style={styles.unlockedText}>\n              Unlocked {new Date(achievement.unlockedAt).toLocaleDateString()}\n            </Text>\n          </View>\n        )}\n      </View>\n      \n      {achievement.isUnlocked && (\n        <View style={[styles.unlockedBadge, { backgroundColor: rarityColors[0] }]}>\n          <Ionicons name=\"checkmark\" size={16} color={COLORS.white} />\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nexport default function AchievementsScreen() {\n  const unlockedCount = mockAchievements.filter(a => a.isUnlocked).length;\n  const totalPoints = mockAchievements\n    .filter(a => a.isUnlocked)\n    .reduce((sum, a) => sum + a.points, 0);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView \n        style={styles.scrollView}\n        contentContainerStyle={styles.scrollContent}\n        showsVerticalScrollIndicator={false}\n      >\n        {/* Stats Header */}\n        <View style={styles.statsContainer}>\n          <LinearGradient\n            colors={[COLORS.primary, COLORS.primaryLight]}\n            style={styles.statsCard}\n          >\n            <Text style={styles.statsTitle}>Achievement Progress</Text>\n            <View style={styles.statsRow}>\n              <View style={styles.stat}>\n                <Text style={styles.statValue}>{unlockedCount}</Text>\n                <Text style={styles.statLabel}>Unlocked</Text>\n              </View>\n              <View style={styles.statDivider} />\n              <View style={styles.stat}>\n                <Text style={styles.statValue}>{mockAchievements.length}</Text>\n                <Text style={styles.statLabel}>Total</Text>\n              </View>\n              <View style={styles.statDivider} />\n              <View style={styles.stat}>\n                <Text style={styles.statValue}>{totalPoints}</Text>\n                <Text style={styles.statLabel}>Points</Text>\n              </View>\n            </View>\n            \n            <View style={styles.overallProgress}>\n              <Text style={styles.progressLabel}>Overall Progress</Text>\n              <View style={styles.overallProgressBar}>\n                <View \n                  style={[\n                    styles.overallProgressFill,\n                    { width: `${(unlockedCount / mockAchievements.length) * 100}%` }\n                  ]}\n                />\n              </View>\n              <Text style={styles.progressPercentage}>\n                {Math.round((unlockedCount / mockAchievements.length) * 100)}%\n              </Text>\n            </View>\n          </LinearGradient>\n        </View>\n        \n        {/* Achievements Grid */}\n        <View style={styles.achievementsContainer}>\n          <Text style={styles.sectionTitle}>All Achievements</Text>\n          {mockAchievements.map((achievement) => (\n            <AchievementCard\n              key={achievement.id}\n              achievement={achievement}\n              onPress={() => {}}\n            />\n          ))}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.background,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    paddingBottom: SPACING['4xl'],\n  },\n  \n  // Stats\n  statsContainer: {\n    padding: SPACING.base,\n  },\n  statsCard: {\n    padding: SPACING.xl,\n    borderRadius: BORDER_RADIUS.xl,\n    ...SHADOWS.lg,\n  },\n  statsTitle: {\n    fontSize: TYPOGRAPHY.xl,\n    fontWeight: TYPOGRAPHY.bold,\n    color: COLORS.white,\n    textAlign: 'center',\n    marginBottom: SPACING.lg,\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: SPACING.lg,\n  },\n  stat: {\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: TYPOGRAPHY['2xl'],\n    fontWeight: TYPOGRAPHY.bold,\n    color: COLORS.white,\n  },\n  statLabel: {\n    fontSize: TYPOGRAPHY.sm,\n    color: COLORS.white,\n    opacity: 0.9,\n    marginTop: SPACING.xs,\n  },\n  statDivider: {\n    width: 1,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  },\n  overallProgress: {\n    marginTop: SPACING.base,\n  },\n  progressLabel: {\n    fontSize: TYPOGRAPHY.base,\n    color: COLORS.white,\n    marginBottom: SPACING.sm,\n    textAlign: 'center',\n  },\n  overallProgressBar: {\n    height: 8,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n    borderRadius: BORDER_RADIUS.full,\n    overflow: 'hidden',\n    marginBottom: SPACING.sm,\n  },\n  overallProgressFill: {\n    height: '100%',\n    backgroundColor: COLORS.white,\n    borderRadius: BORDER_RADIUS.full,\n  },\n  progressPercentage: {\n    fontSize: TYPOGRAPHY.sm,\n    color: COLORS.white,\n    textAlign: 'center',\n    opacity: 0.9,\n  },\n  \n  // Achievements\n  achievementsContainer: {\n    padding: SPACING.base,\n  },\n  sectionTitle: {\n    fontSize: TYPOGRAPHY.xl,\n    fontWeight: TYPOGRAPHY.bold,\n    color: COLORS.text,\n    marginBottom: SPACING.base,\n    paddingHorizontal: SPACING.sm,\n  },\n  achievementCard: {\n    flexDirection: 'row',\n    backgroundColor: COLORS.white,\n    padding: SPACING.base,\n    borderRadius: BORDER_RADIUS.lg,\n    marginBottom: SPACING.base,\n    position: 'relative',\n    ...SHADOWS.sm,\n  },\n  achievementIcon: {\n    width: 64,\n    height: 64,\n    borderRadius: 32,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: SPACING.base,\n  },\n  achievementContent: {\n    flex: 1,\n  },\n  achievementHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: SPACING.xs,\n  },\n  achievementTitle: {\n    fontSize: TYPOGRAPHY.base,\n    fontWeight: TYPOGRAPHY.semiBold,\n    color: COLORS.text,\n    flex: 1,\n  },\n  lockedTitle: {\n    color: COLORS.gray500,\n  },\n  rarityBadge: {\n    fontSize: TYPOGRAPHY.xs,\n    fontWeight: TYPOGRAPHY.bold,\n    marginLeft: SPACING.sm,\n  },\n  achievementDescription: {\n    fontSize: TYPOGRAPHY.sm,\n    color: COLORS.textSecondary,\n    marginBottom: SPACING.sm,\n    lineHeight: 20,\n  },\n  lockedDescription: {\n    color: COLORS.gray400,\n  },\n  rewardContainer: {\n    flexDirection: 'row',\n    marginBottom: SPACING.sm,\n  },\n  reward: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: SPACING.base,\n  },\n  rewardText: {\n    fontSize: TYPOGRAPHY.xs,\n    color: COLORS.textSecondary,\n    marginLeft: SPACING.xs,\n    fontWeight: TYPOGRAPHY.medium,\n  },\n  progressContainer: {\n    marginBottom: SPACING.sm,\n  },\n  progressBar: {\n    height: 6,\n    backgroundColor: COLORS.gray200,\n    borderRadius: BORDER_RADIUS.full,\n    overflow: 'hidden',\n    marginBottom: SPACING.xs,\n  },\n  progressFill: {\n    height: '100%',\n    borderRadius: BORDER_RADIUS.full,\n  },\n  progressText: {\n    fontSize: TYPOGRAPHY.xs,\n    color: COLORS.textTertiary,\n  },\n  unlockedContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  unlockedText: {\n    fontSize: TYPOGRAPHY.xs,\n    color: COLORS.success,\n    marginLeft: SPACING.xs,\n    fontWeight: TYPOGRAPHY.medium,\n  },\n  unlockedBadge: {\n    position: 'absolute',\n    top: SPACING.sm,\n    right: SPACING.sm,\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}