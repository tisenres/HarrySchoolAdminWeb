{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useAuthStore } from \"../store/authStore\";\nimport AuthNavigator from \"./AuthNavigator\";\nimport MainNavigator from \"./MainNavigator\";\nimport OnboardingScreen from \"../screens/OnboardingScreen\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function RootNavigator() {\n  var _useAuthStore = useAuthStore(),\n    isAuthenticated = _useAuthStore.isAuthenticated,\n    user = _useAuthStore.user;\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: false\n    },\n    children: !isAuthenticated ? _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Auth\",\n        component: AuthNavigator\n      }), _jsx(Stack.Screen, {\n        name: \"Onboarding\",\n        component: OnboardingScreen,\n        options: {\n          gestureEnabled: true,\n          gestureDirection: 'horizontal'\n        }\n      })]\n    }) : _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: MainNavigator\n    })\n  });\n}","map":{"version":3,"names":["React","createStackNavigator","useAuthStore","AuthNavigator","MainNavigator","OnboardingScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","RootNavigator","_useAuthStore","isAuthenticated","user","Navigator","screenOptions","headerShown","gestureEnabled","children","Screen","name","component","options","gestureDirection"],"sources":["/Users/tisenres/Claude Projects/HarrySchoolAdmin/mobile/apps/student/src/navigation/RootNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport { useAuthStore } from '../store/authStore';\nimport { RootStackParamList } from '../types';\n\nimport AuthNavigator from './AuthNavigator';\nimport MainNavigator from './MainNavigator';\nimport OnboardingScreen from '../screens/OnboardingScreen';\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nexport default function RootNavigator() {\n  const { isAuthenticated, user } = useAuthStore();\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        gestureEnabled: false,\n      }}\n    >\n      {!isAuthenticated ? (\n        <>\n          <Stack.Screen \n            name=\"Auth\" \n            component={AuthNavigator} \n          />\n          <Stack.Screen \n            name=\"Onboarding\" \n            component={OnboardingScreen}\n            options={{\n              gestureEnabled: true,\n              gestureDirection: 'horizontal',\n            }}\n          />\n        </>\n      ) : (\n        <Stack.Screen \n          name=\"Main\" \n          component={MainNavigator} \n        />\n      )}\n    </Stack.Navigator>\n  );\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,yBAAyB;AAE9D,SAASC,YAAY;AAGrB,OAAOC,aAAa;AACpB,OAAOC,aAAa;AACpB,OAAOC,gBAAgB;AAAoC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA,EAAAC,IAAA,IAAAC,KAAA;AAE3D,IAAMC,KAAK,GAAGX,oBAAoB,CAAqB,CAAC;AAExD,eAAe,SAASY,aAAaA,CAAA,EAAG;EACtC,IAAAC,aAAA,GAAkCZ,YAAY,CAAC,CAAC;IAAxCa,eAAe,GAAAD,aAAA,CAAfC,eAAe;IAAEC,IAAI,GAAAF,aAAA,CAAJE,IAAI;EAE7B,OACET,IAAA,CAACK,KAAK,CAACK,SAAS;IACdC,aAAa,EAAE;MACbC,WAAW,EAAE,KAAK;MAClBC,cAAc,EAAE;IAClB,CAAE;IAAAC,QAAA,EAED,CAACN,eAAe,GACfJ,KAAA,CAAAF,SAAA;MAAAY,QAAA,GACEd,IAAA,CAACK,KAAK,CAACU,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAErB;MAAc,CAC1B,CAAC,EACFI,IAAA,CAACK,KAAK,CAACU,MAAM;QACXC,IAAI,EAAC,YAAY;QACjBC,SAAS,EAAEnB,gBAAiB;QAC5BoB,OAAO,EAAE;UACPL,cAAc,EAAE,IAAI;UACpBM,gBAAgB,EAAE;QACpB;MAAE,CACH,CAAC;IAAA,CACF,CAAC,GAEHnB,IAAA,CAACK,KAAK,CAACU,MAAM;MACXC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAEpB;IAAc,CAC1B;EACF,CACc,CAAC;AAEtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}